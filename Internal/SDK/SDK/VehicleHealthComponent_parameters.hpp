#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleHealthComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function VehicleHealthComponent.VehicleHealthComponent_C.AddHealth
// 0x0008 (0x0008 - 0x0000)
struct VehicleHealthComponent_C_AddHealth final
{
public:
	double                                        HealthPercent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleHealthComponent_C_AddHealth) == 0x000008, "Wrong alignment on VehicleHealthComponent_C_AddHealth");
static_assert(sizeof(VehicleHealthComponent_C_AddHealth) == 0x000008, "Wrong size on VehicleHealthComponent_C_AddHealth");
static_assert(offsetof(VehicleHealthComponent_C_AddHealth, HealthPercent) == 0x000000, "Member 'VehicleHealthComponent_C_AddHealth::HealthPercent' has a wrong offset!");

// Function VehicleHealthComponent.VehicleHealthComponent_C.ExecuteUbergraph_VehicleHealthComponent
// 0x0028 (0x0028 - 0x0000)
struct VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HealthPercent;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  CallFunc_CastToCharacter_Character;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent) == 0x000008, "Wrong alignment on VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent");
static_assert(sizeof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent) == 0x000028, "Wrong size on VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, EntryPoint) == 0x000000, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, K2Node_CustomEvent_HealthPercent) == 0x000008, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::K2Node_CustomEvent_HealthPercent' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent, CallFunc_CastToCharacter_Character) == 0x000020, "Member 'VehicleHealthComponent_C_ExecuteUbergraph_VehicleHealthComponent::CallFunc_CastToCharacter_Character' has a wrong offset!");

// Function VehicleHealthComponent.VehicleHealthComponent_C.UpdateUIHealth
// 0x0010 (0x0010 - 0x0000)
struct VehicleHealthComponent_C_UpdateUIHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleHealthComponent_C_UpdateUIHealth) == 0x000008, "Wrong alignment on VehicleHealthComponent_C_UpdateUIHealth");
static_assert(sizeof(VehicleHealthComponent_C_UpdateUIHealth) == 0x000010, "Wrong size on VehicleHealthComponent_C_UpdateUIHealth");
static_assert(offsetof(VehicleHealthComponent_C_UpdateUIHealth, Health) == 0x000000, "Member 'VehicleHealthComponent_C_UpdateUIHealth::Health' has a wrong offset!");
static_assert(offsetof(VehicleHealthComponent_C_UpdateUIHealth, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'VehicleHealthComponent_C_UpdateUIHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

