#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EasterEgg_GlowingEyes

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EasterEgg_GlowingEyes.BP_EasterEgg_GlowingEyes_C.BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_EasterEgg_GlowingEyes_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function BP_EasterEgg_GlowingEyes.BP_EasterEgg_GlowingEyes_C.ExecuteUbergraph_BP_EasterEgg_GlowingEyes
// 0x0068 (0x0068 - 0x0000)
struct BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetUDS_UDS;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewHidden;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes) == 0x000008, "Wrong alignment on BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes");
static_assert(sizeof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes) == 0x000068, "Wrong size on BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, EntryPoint) == 0x000000, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_GetUDS_UDS) == 0x000018, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_GetUDS_UDS' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_GetDistanceTo_ReturnValue) == 0x00004C, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_CustomEvent_bNewHidden) == 0x000051, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_CustomEvent_bNewHidden' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000052, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_ComponentBoundEvent_LayerIndex) == 0x000054, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_ComponentBoundEvent_bIsSeen) == 0x000058, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, K2Node_SwitchInteger_CmpSuccess) == 0x000059, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BP_EasterEgg_GlowingEyes_C_ExecuteUbergraph_BP_EasterEgg_GlowingEyes::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_EasterEgg_GlowingEyes.BP_EasterEgg_GlowingEyes_C.FacePlayer
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EasterEgg_GlowingEyes_C_FacePlayer final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasterEgg_GlowingEyes_C_FacePlayer) == 0x000008, "Wrong alignment on BP_EasterEgg_GlowingEyes_C_FacePlayer");
static_assert(sizeof(BP_EasterEgg_GlowingEyes_C_FacePlayer) == 0x0000B8, "Wrong size on BP_EasterEgg_GlowingEyes_C_FacePlayer");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, Target) == 0x000000, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::Target' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_FindLookAtRotation_ReturnValue) == 0x000058, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_RInterpTo_ReturnValue) == 0x000070, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_BreakRotator_Roll) == 0x000088, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_BreakRotator_Pitch) == 0x00008C, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_BreakRotator_Yaw) == 0x000090, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B0, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_FacePlayer, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0000B4, "Member 'BP_EasterEgg_GlowingEyes_C_FacePlayer::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_EasterEgg_GlowingEyes.BP_EasterEgg_GlowingEyes_C.Svr_SetHidden
// 0x0001 (0x0001 - 0x0000)
struct BP_EasterEgg_GlowingEyes_C_Svr_SetHidden final
{
public:
	bool                                          bNewHidden;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasterEgg_GlowingEyes_C_Svr_SetHidden) == 0x000001, "Wrong alignment on BP_EasterEgg_GlowingEyes_C_Svr_SetHidden");
static_assert(sizeof(BP_EasterEgg_GlowingEyes_C_Svr_SetHidden) == 0x000001, "Wrong size on BP_EasterEgg_GlowingEyes_C_Svr_SetHidden");
static_assert(offsetof(BP_EasterEgg_GlowingEyes_C_Svr_SetHidden, bNewHidden) == 0x000000, "Member 'BP_EasterEgg_GlowingEyes_C_Svr_SetHidden::bNewHidden' has a wrong offset!");

}

