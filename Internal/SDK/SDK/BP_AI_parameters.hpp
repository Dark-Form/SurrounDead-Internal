#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AI.BP_AI_C.ExecuteUbergraph_BP_AI
// 0x0180 (0x0180 - 0x0000)
struct BP_AI_C_ExecuteUbergraph_BP_AI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleTime;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_CustomEvent_PhysMat;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat)> K2Node_CreateDelegate_OutputDelegate; // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_C_ExecuteUbergraph_BP_AI) == 0x000008, "Wrong alignment on BP_AI_C_ExecuteUbergraph_BP_AI");
static_assert(sizeof(BP_AI_C_ExecuteUbergraph_BP_AI) == 0x000180, "Wrong size on BP_AI_C_ExecuteUbergraph_BP_AI");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, EntryPoint) == 0x000000, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_EventName) == 0x000004, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_EmitterTime) == 0x00000C, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_ParticleTime) == 0x000010, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_Location) == 0x000018, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_Velocity) == 0x000030, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_Direction) == 0x000048, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_Normal) == 0x000060, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_BoneName) == 0x000078, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CustomEvent_PhysMat) == 0x000080, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CustomEvent_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_GetBoolCVar_ReturnValue) == 0x000088, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000B0, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_BreakRotator_Roll) == 0x0000C8, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_BreakRotator_Pitch) == 0x0000CC, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_BreakRotator_Yaw) == 0x0000D0, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_GetSocketLocation_ReturnValue) == 0x0000D8, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_GetBoolCVar_ReturnValue_1) == 0x0000F0, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000F8, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_RandomFloatInRange_ReturnValue) == 0x000100, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000108, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000128, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_RandomInteger_ReturnValue) == 0x000140, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, K2Node_CreateDelegate_OutputDelegate) == 0x000144, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000158, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000160, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000168, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast) == 0x000170, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000174, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AI_C_ExecuteUbergraph_BP_AI, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000178, "Member 'BP_AI_C_ExecuteUbergraph_BP_AI::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_AI.BP_AI_C.OnCollide
// 0x0080 (0x0080 - 0x0000)
struct BP_AI_C_OnCollide final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_C_OnCollide) == 0x000008, "Wrong alignment on BP_AI_C_OnCollide");
static_assert(sizeof(BP_AI_C_OnCollide) == 0x000080, "Wrong size on BP_AI_C_OnCollide");
static_assert(offsetof(BP_AI_C_OnCollide, EventName) == 0x000000, "Member 'BP_AI_C_OnCollide::EventName' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, EmitterTime) == 0x000008, "Member 'BP_AI_C_OnCollide::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, ParticleTime) == 0x00000C, "Member 'BP_AI_C_OnCollide::ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, Location) == 0x000010, "Member 'BP_AI_C_OnCollide::Location' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, Velocity) == 0x000028, "Member 'BP_AI_C_OnCollide::Velocity' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, Direction) == 0x000040, "Member 'BP_AI_C_OnCollide::Direction' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, Normal) == 0x000058, "Member 'BP_AI_C_OnCollide::Normal' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, BoneName) == 0x000070, "Member 'BP_AI_C_OnCollide::BoneName' has a wrong offset!");
static_assert(offsetof(BP_AI_C_OnCollide, PhysMat) == 0x000078, "Member 'BP_AI_C_OnCollide::PhysMat' has a wrong offset!");

}

