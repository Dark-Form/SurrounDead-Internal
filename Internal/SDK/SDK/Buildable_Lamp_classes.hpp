#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_Lamp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Buildable_MASTER_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_Lamp.Buildable_Lamp_C
// 0x0018 (0x0440 - 0x0428)
class ABuildable_Lamp_C final : public ABuildable_MASTER_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Buildable_Lamp_C;                   // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn;                                           // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnInteractBuildable(class AActor* Actor);
	void On();
	void Off();
	void LightCallback(bool NewValue);
	void ExecuteUbergraph_Buildable_Lamp(int32 EntryPoint);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_Lamp_C">();
	}
	static class ABuildable_Lamp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_Lamp_C>();
	}
};
static_assert(alignof(ABuildable_Lamp_C) == 0x000008, "Wrong alignment on ABuildable_Lamp_C");
static_assert(sizeof(ABuildable_Lamp_C) == 0x000440, "Wrong size on ABuildable_Lamp_C");
static_assert(offsetof(ABuildable_Lamp_C, UberGraphFrame_Buildable_Lamp_C) == 0x000428, "Member 'ABuildable_Lamp_C::UberGraphFrame_Buildable_Lamp_C' has a wrong offset!");
static_assert(offsetof(ABuildable_Lamp_C, PointLight) == 0x000430, "Member 'ABuildable_Lamp_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABuildable_Lamp_C, LightOn) == 0x000438, "Member 'ABuildable_Lamp_C::LightOn' has a wrong offset!");

}

